{"version":3,"sources":["images/logo.png","reducers/index.js","utils/setAuthToken.js","components/layout/Header.js","components/layout/Footer.js","views/HomePage/Homepage.js","utils/is_empty.js","components/CustomForm/CustomForm.jsx","views/Login/Login.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","combineReducers","setAuthToken","token","axios","defaults","headers","common","Authorization","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeItem","handleItemClick","bind","assertThisInitialized","e","name","_ref","setState","react_default","a","createElement","Menu","pointing","secondary","Item","as","Link","to","active","onClick","Image","size","bordered","centered","circular","src","logo","position","Button","Group","react_router_dom","Or","positive","Component","Footer","className","HomePage","isEmpty","value","undefined","keys","length","trim","CustomForm","errorMessage","loading","handleSubmit","inputFields","buttonName","errorList","forEach","key","index","Array","isArray","push","Form","onSubmit","Message","visible","error","header","list","map","input","widths","formGroupInput","formGroupIndex","Input","assign","fluid","primary","inverted","type","id","concat","defaultProps","Login","_Component","handleInputChange","event","defineProperty","target","preventDefault","loginAction","user","email","password","inherits","createClass","_this$state","components_CustomForm_CustomForm","placeholder","onChange","warning","href","style","display","justifyContent","nextProps","prevState","defautProps","routes","path","component","connect","auth","authenticated","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","localStorage","getItem","store","createStore","reducers","applyMiddleware","reduxThunk","App","es","Container","layout_Header","react_router","route","exact","layout_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04e51a3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.073a569a.png\";","import { combineReducers } from 'redux';\n\n\nexport default combineReducers({});\n","import axios from 'axios';\n\n\nconst setAuthToken = (token) => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common.Authorization = token;\n  } else {\n    // delete auth header\n    delete axios.defaults.headers.common.Authorization;\n  }\n};\n\nexport default setAuthToken;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Image, Menu } from 'semantic-ui-react';\nimport logo from '../../images/logo.png'\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 'home',\n    };\n\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  handleItemClick(e, { name }) {\n    this.setState({ activeItem: name });\n  }\n\n  render() {\n    const { activeItem } = this.state;\n    return (\n      <Menu pointing secondary>\n        <Menu.Item\n          as={Link}\n          to=\"/\"\n          name=\"home\"\n          active={activeItem === 'home'}\n          onClick={this.handleItemClick}\n        >\n          <Image\n            size=\"mini\"\n            bordered\n            centered\n            circular\n            src={logo}\n          />\n        </Menu.Item>\n        <Menu.Item\n          as={Link}\n          to=\"/\"\n          name=\"home\"\n          active={activeItem === 'home'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Menu position=\"right\">\n          <Menu.Item\n            name=\"auth\"\n            active={activeItem === 'auth'}\n            onClick={this.handleItemClick}\n          >\n            <Button.Group>\n              <Link to=\"/login\">\n                <Button>Signin</Button>\n              </Link>\n\n              <Button.Or/>\n              <Link to=\"/register\">\n                <Button positive>Signup</Button>\n              </Link>\n            </Button.Group>\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => (\n\n      <div>\n          <div className=\"phantom\" />\n          <div className=\"style_footer\">\n\n             <p>SendIT. All rights reserved. &copy; 2019</p>\n          </div>\n      </div>\n  )\n\nexport default Footer\n\n\n","import React, { Component } from 'react';\n\n\n class HomePage extends Component {\n  render() {\n    return (\n      <div className=\"index\">\n            {/* <div className=\"header\">\n              <a href=\"#default\" className=\"logo\">SendIT</a>\n              <div className=\"header-right\">\n                <button onclick=\"document.getElementById('id01')\">LOGIN</button> */}\n                {/* <button onclick=\"document.getElementById('id01').style.display='block'\" style=\"width:auto;\">LOGIN</button> */}\n                {/* <button onclick=\"document.getElementById('id02')\">SIGNUP</button> */}\n                {/* <button onclick=\"document.getElementById('id02').style.display='block'\" style=\"width:auto;\">SIGNUP</button> */}\n              {/* </div> \n            </div> */}\n\n            <div>\n                <br/><br/><br/><br/><br/><br/>\n                <br/><br/><br/><br/><br/><br/>\n                <br/><br/><br/><br/><br/><br/>\n                <br/><br/><br/><br/><br/><br/>\n                <h1>Hey I'am SendIT<sup>&#174;</sup></h1>.\n                <p><em>SendIT</em> - the fastest web-app for parcel delivery's</p>\n                <br/><br/><br/><br/><br/><br/>\n                {/* <br/><br/><br/><br/><br/><br/> */}\n            </div>          \n      </div>\n    );\n  }\n}\n\n export default HomePage;","const isEmpty = value => value === undefined\n  || value === null\n  || (typeof value === 'object' && Object.keys(value).length === 0)\n  || (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Form, Message} from 'semantic-ui-react';\n\nimport isEmpty from '../../utils/is_empty';\n\n\nconst CustomForm = (props) => {\n  const {\n    className,\n    size,\n    errorMessage,\n    loading,\n    handleSubmit,\n    inputFields,\n    buttonName,\n  } = props;\n\n  const errorList = [];\n  Object.keys(errorMessage)\n    .forEach((key, index) => {\n      if (Array.isArray(errorMessage[key])){\n        errorList.push(errorMessage[key][0]);\n      }\n      errorList.push(errorMessage[key]);\n    });\n\n  return (\n    <Form loading={loading} size={size} className={className} onSubmit={handleSubmit}>\n\n      <Message\n        visible={!isEmpty(errorMessage)}\n        error\n        header=\"There were some errors in your submission\"\n        list={errorList}\n      />\n      {inputFields.map((input, index) => {\n        if (!Array.isArray(input)) {\n          return (\n            <Form.Input\n              {...input}\n              key={index}\n            />\n          );\n        }\n        // If the input field is an array then make a form group field\n        // This is so we encase the items in the input array\n        return (\n          <Form.Group widths=\"equal\" key={index}>\n            {input.map((formGroupInput, formGroupIndex) => (\n              <Form.Input\n                {...formGroupInput}\n                key={formGroupIndex}\n              />\n            ))}\n          </Form.Group>\n        );\n      })}\n\n\n      <Form.Button\n        fluid\n        primary\n        inverted\n        size=\"large\"\n        type=\"submit\"\n        id={`${buttonName}Button`}\n      >\n        {buttonName}\n      </Form.Button>\n    </Form>\n  );\n};\n\nCustomForm.defaultProps = {\n  className: '',\n  size: 'small',\n  loading: false,\n  errorMessage: {},\n  inputFields: [],\n  buttonName: 'Change me',\n};\n\nCustomForm.propTypes = {\n  className: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  inputFields: PropTypes.array.isRequired,\n  errorMessage: PropTypes.object,\n  loading: PropTypes.bool,\n  size: PropTypes.string,\n  buttonName: PropTypes.string.isRequired,\n};\n\nexport default CustomForm;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Message,} from 'semantic-ui-react';\nimport CustomForm from '../../components/CustomForm/CustomForm';\nimport isEmpty from '../../utils/is_empty';\n// import SocialButtons from '../../components/layout/login/socialAuth';\n\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errorMessage: {},\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n\n    if (prevState.errorMessage !== nextProps.errorMessage\n\n      || prevState.loading !== nextProps.loading) {\n      return {\n        errorMessage: nextProps.errorMessage,\n      };\n    }\n\n    return null;\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.loginAction({ user: this.state });\n  };\n\n  render() {\n    const {\n      email,\n      password,\n      errorMessage,\n    } = this.state;\n\n    const {loading} = this.props;\n    return (\n      <div>\n        <CustomForm\n          className=\"register-form\"\n          loading={loading}\n          size=\"large\"\n          errorMessage={errorMessage}\n          handleSubmit={this.handleSubmit}\n          buttonName=\"login\"\n          inputFields={[\n            {\n              fluid: true,\n              name: 'email',\n              placeholder: 'E-mail address',\n              type: 'email',\n              value: email,\n              onChange: this.handleInputChange,\n              error: !isEmpty(errorMessage ? errorMessage.email : ''),\n            },\n            {\n              fluid: true,\n              name: 'password',\n              placeholder: 'Password',\n              type: 'password',\n              value: password,\n              onChange: this.handleInputChange,\n              error: !isEmpty(errorMessage ? errorMessage.password : ''),\n            },\n          ]}\n        />\n        {/* <Message>\n          Or sign up using your social media account\n          <SocialButtons {...this.props} />\n        </Message> */}\n        <Message warning>\n          <a href=\"/reset\" style={{ display: 'flex', justifyContent: 'center' }}> Forgot your password? </a>\n        </Message>\n      </div>\n\n    );\n  }\n}\n\nLogin.defautProps = {\n  loading: false,\n};\n\nLogin.propTypes = {\n  // eslint-disable-next-line max-len\n  // eslint-disable-next-line\n  // react/forbid-prop-types,react/require-default-props,react/no-unused-prop-types\n  errorMessage: PropTypes.object,\n  // eslint-disable-next-line react/require-default-props\n  authenticated: PropTypes.bool,\n  // eslint-disable-next-line react/require-default-props\n  loading: PropTypes.bool,\n  loginAction: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = ({ auth }) => ({\n  errorMessage: auth.errorMessage,\n  loading: auth.loading,\n  authenticated: auth.authenticated,\n});\n\nexport default connect(mapStateToProps)(Login);\n","import HomePage from '../views/HomePage/Homepage';\nimport Login from '../views/Login/Login';\n\nconst routes = [\n    {\n        path: '/',\n        name: 'HomePage',\n        component: HomePage\n    },\n    {\n        path: '/login',\n        name: 'Login',\n        component: Login,\n    }\n];\n\nexport default routes;","import React from 'react';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport { Container } from 'semantic-ui-react';\nimport reducers from './reducers';\nimport setAuthToken from './utils/setAuthToken';\n\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport routes from './routes/index'\n\n// eslint-disable-next-line valid-typeof,no-underscore-dangle\nconst composeEnhancers = typeof window === 'objects' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  // eslint-disable-next-line no-underscore-dangle\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst token = localStorage.getItem('AUTH_TOKEN');\n\nconst store = createStore(\n  reducers,\n  {\n    auth: { authenticated: token },\n  },\n  composeEnhancers(applyMiddleware(reduxThunk)),\n);\n\nif (token) {\n  // Set auth token header auth to axios on every request\n  setAuthToken(token);\n}\n\n\nconst App = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Container className=\"bg-gray\">\n        <Header/>\n        <Switch>\n\n          {\n            routes.map( (route)=>{\n              return <Route\n              exact path={route.path}\n              component={route.component}/>\n            })\n          }\n\n        </Switch>\n        <Footer/>\n      </Container>\n    </BrowserRouter>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}